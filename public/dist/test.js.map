{"version":3,"sources":["../src/test.js"],"names":["updatePitch","analyserNode","sampleRate","data","Float32Array","fftSize","getFloatTimeDomainData","pitch","clarity","document","getElementById","textContent","String","window","requestAnimationFrame","addEventListener","audioContext","AudioContext","webkitAudioContext","createAnalyser","navigator","mediaDevices","getUserMedia","audio","then","stream","sourceNode","createMediaStreamSource","connect"],"mappings":";;;;;;;;AACA;;;;;;;;;;AAEA,SAASA,WAAT,CAAqBC,YAArB,EAAmCC,UAAnC,EAA+C;AAC7C,MAAIC,IAAI,GAAG,IAAIC,YAAJ,CAAiBH,YAAY,CAACI,OAA9B,CAAX;AACAJ,EAAAA,YAAY,CAACK,sBAAb,CAAoCH,IAApC;;AAF6C,mBAGtB,uBAAUA,IAAV,EAAgBD,UAAhB,CAHsB;AAAA;AAAA,MAGxCK,KAHwC;AAAA,MAGjCC,OAHiC;;AAK7C,MAAIA,OAAO,GAAG,IAAd,EAAoB;AAChBC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,WAAjC,GAA+CC,MAAM,CAACL,KAAD,CAArD;AACAE,IAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,WAAnC,GAAiDC,MAAM,CAACJ,OAAD,CAAvD;AACH;;AACDK,EAAAA,MAAM,CAACC,qBAAP,CAA6B,MAAMd,WAAW,CAACC,YAAD,EAAeC,UAAf,CAA9C;AACD;;AAEDO,QAAQ,CAACM,gBAAT,CAA0B,kBAA1B,EAA8C,MAAM;AAClD;AACA,MAAIC,YAAY,GAAG,KAAKH,MAAM,CAACI,YAAP,IAAuBJ,MAAM,CAACK,kBAAnC,GAAnB;AACA,MAAIjB,YAAY,GAAGe,YAAY,CAACG,cAAb,EAAnB;AAEAC,EAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAApC,EAAqDC,IAArD,CAA2DC,MAAD,IAAY;AACpE,QAAIC,UAAU,GAAGV,YAAY,CAACW,uBAAb,CAAqCF,MAArC,CAAjB;AACAC,IAAAA,UAAU,CAACE,OAAX,CAAmB3B,YAAnB;AACAD,IAAAA,WAAW,CAACC,YAAD,EAAee,YAAY,CAACd,UAA5B,CAAX;AACD,GAJD;AAKD,CAVD","sourcesContent":["// test.js\nimport { findPitch } from 'pitchy';\n\nfunction updatePitch(analyserNode, sampleRate) {\n  let data = new Float32Array(analyserNode.fftSize);\n  analyserNode.getFloatTimeDomainData(data);\n  let [pitch, clarity] = findPitch(data, sampleRate);\n\n  if (clarity > 0.98) {\n      document.getElementById('pitch').textContent = String(pitch);\n      document.getElementById('clarity').textContent = String(clarity);\n  }\n  window.requestAnimationFrame(() => updatePitch(analyserNode, sampleRate));\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // For cross-browser compatibility.\n  let audioContext = new (window.AudioContext || window.webkitAudioContext)();\n  let analyserNode = audioContext.createAnalyser();\n\n  navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {\n    let sourceNode = audioContext.createMediaStreamSource(stream);\n    sourceNode.connect(analyserNode);\n    updatePitch(analyserNode, audioContext.sampleRate);\n  });\n});\n"],"file":"test.js"}