{"version":3,"sources":["../../source/controllers/auth.js"],"names":["auth","express","Router","get","req","res","render","post","user","User","body","result","save","catch","err","console","log","status","send","token","jwt","sign","_id","username","admin","process","env","SECRET","expiresIn","cookie","maxAge","httpOnly","redirect","clearCookie","password","query","findOne","message","comparePassword","isMatch"],"mappings":";;;;;;;AAEA;;AACA;;AAKA;;;;AARA;AAKA,MAAMA,IAAI,GAAGC,iBAAQC,MAAR,EAAb,C,CAEA;;;AAGAF,IAAI,CAACG,GAAL,CAAS,UAAT,EAAqB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC/BA,EAAAA,GAAG,CAACC,MAAJ,CAAW,SAAX;AACH,CAFD;AAIAN,IAAI,CAACO,IAAL,CAAU,UAAV,EAAsB,OAAOH,GAAP,EAAYC,GAAZ,KAAoB;AACtC,QAAMG,IAAI,GAAG,IAAIC,aAAJ,CAASL,GAAG,CAACM,IAAb,CAAb;AACA,QAAMC,MAAM,GAAG,MAAMH,IAAI,CAACI,IAAL,GAAYC,KAAZ,CAAkBC,GAAG,IAAI;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAOT,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEJ,MAAAA,GAAG,EAAEA;AAAP,KAArB,CAAP;AACH,GAHoB,CAArB;;AAIA,QAAMK,KAAK,GAAGC,sBAAIC,IAAJ,CAAS;AAAEC,IAAAA,GAAG,EAAEd,IAAI,CAACc,GAAZ;AAAiBC,IAAAA,QAAQ,EAAEf,IAAI,CAACe,QAAhC;AAA0CC,IAAAA,KAAK,EAAEhB,IAAI,CAACgB;AAAtD,GAAT,EAAwEC,OAAO,CAACC,GAAR,CAAYC,MAApF,EAA4F;AACtGC,IAAAA,SAAS,EAAG;AAD0F,GAA5F,CAAd;;AAGAvB,EAAAA,GAAG,CAACwB,MAAJ,CAAY,QAAZ,EAAqBV,KAArB,EAA4B;AAAEW,IAAAA,MAAM,EAAE,MAAV;AAAkBC,IAAAA,QAAQ,EAAE;AAA5B,GAA5B;AACA1B,EAAAA,GAAG,CAAC2B,QAAJ,CAAc,GAAd;AACH,CAXD;AAaAhC,IAAI,CAACG,GAAL,CAAS,SAAT,EAAoB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC9BA,EAAAA,GAAG,CAAC4B,WAAJ,CAAiB,QAAjB;AACA5B,EAAAA,GAAG,CAAC2B,QAAJ,CAAc,GAAd;AACH,CAHD;AAKAhC,IAAI,CAACG,GAAL,CAAS,QAAT,EAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC7BA,EAAAA,GAAG,CAACC,MAAJ,CAAY,OAAZ;AACH,CAFD;AAIAN,IAAI,CAACO,IAAL,CAAW,QAAX,EAAoB,OAAOH,GAAP,EAAYC,GAAZ,KAAoB;AACpC,QAAMkB,QAAQ,GAAGnB,GAAG,CAACM,IAAJ,CAASa,QAA1B;AACA,QAAMW,QAAQ,GAAG9B,GAAG,CAACM,IAAJ,CAASwB,QAA1B;AACA,QAAMC,KAAK,GAAG;AACVZ,IAAAA,QAAQ,EAAEA;AADA,GAAd;AAGA,QAAMf,IAAI,GAAG,MAAMC,cAAK2B,OAAL,CAAaD,KAAb,EAAqB,mBAArB,EAAyCtB,KAAzC,CAA+CC,GAAG,IAAI;AAAEC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAkB,GAA1E,CAAnB;;AACA,MAAI,CAACN,IAAL,EAAW;AACP;AACA,WAAOH,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEmB,MAAAA,OAAO,EAAG;AAAZ,KAArB,CAAP;AACH,GAVmC,CAWpC;;;AACA7B,EAAAA,IAAI,CAAC8B,eAAL,CAAqBJ,QAArB,EAA+B,CAACpB,GAAD,EAAMyB,OAAN,KAAkB;AAC7C,QAAI,CAACA,OAAL,EAAc;AACV,aAAOlC,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEmB,QAAAA,OAAO,EAAG;AAAZ,OAArB,CAAP;AACH,KAH4C,CAI7C;;;AACA,UAAMlB,KAAK,GAAGC,sBAAIC,IAAJ,CAAS;AAAEC,MAAAA,GAAG,EAAEd,IAAI,CAACc,GAAZ;AAAiBC,MAAAA,QAAQ,EAAEf,IAAI,CAACe,QAAhC;AAA0CC,MAAAA,KAAK,EAAEhB,IAAI,CAACgB;AAAtD,KAAT,EAAwEC,OAAO,CAACC,GAAR,CAAYC,MAApF,EAA4F;AACtGC,MAAAA,SAAS,EAAG;AAD0F,KAA5F,CAAd;;AAGAvB,IAAAA,GAAG,CAACwB,MAAJ,CAAY,QAAZ,EAAqBV,KAArB,EAA4B;AAAEW,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,QAAQ,EAAE;AAA5B,KAA5B;AACA1B,IAAAA,GAAG,CAAC2B,QAAJ,CAAc,GAAd;AACH,GAVD;AAWH,CAvBD;AAyBAhC,IAAI,CAACG,GAAL,CAAS,UAAT,EAAqB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACrC,QAAM8B,KAAK,GAAG;AACVb,IAAAA,GAAG,EAAElB,GAAG,CAACI,IAAJ,CAASc;AADJ,GAAd;AAGA,QAAMd,IAAI,GAAG,MAAMC,cAAK2B,OAAL,CAAaD,KAAb,EAAoBtB,KAApB,CAA0BC,GAAG,IAAI;AAChDC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAOT,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,GAArB,CAAP;AACH,GAHkB,CAAnB;AAIAT,EAAAA,GAAG,CAACC,MAAJ,CAAW,SAAX,EAAsB;AAAEE,IAAAA,IAAI,EAAEA;AAAR,GAAtB;AACH,CATD;eAWeR,I","sourcesContent":["// auth.js\n\nimport express from 'express'\nimport jwt from 'jsonwebtoken'\n\nconst auth = express.Router()\n\n// models\nimport User from '../models/user.js'\n\nauth.get('/sign-up', (req, res) => {\n    res.render('sign-up');\n})\n\nauth.post('/sign-up', async (req, res) => {\n    const user = new User(req.body);\n    const result = await user.save().catch(err => {\n        console.log(err);\n        return res.status(400).send({ err: err })\n    });\n    const token = jwt.sign({ _id: user._id, username: user.username, admin: user.admin }, process.env.SECRET, {\n        expiresIn: `60 days`\n    });\n    res.cookie(`nToken`, token, { maxAge: 900000, httpOnly: true });\n    res.redirect(`/`);\n})\n\nauth.get('/logout', (req, res) => {\n    res.clearCookie(`nToken`);\n    res.redirect(`/`);\n})\n\nauth.get('/login', (req, res) => {\n    res.render(`login`);\n})\n\nauth.post(`/login`, async (req, res) => {\n    const username = req.body.username;\n    const password = req.body.password;\n    const query = {\n        username: username\n    }\n    const user = await User.findOne(query, `username password`).catch(err => { console.log(err) })\n    if (!user) {\n        // user not found\n        return res.status(401).send({ message: `Wrong username or password` });\n    }\n    // check the password\n    user.comparePassword(password, (err, isMatch) => {\n        if (!isMatch) {\n            return res.status(401).send({ message: `Wrong username or password` });\n        }\n        // create a token\n        const token = jwt.sign({ _id: user._id, username: user.username, admin: user.admin }, process.env.SECRET, {\n            expiresIn: `60 days`\n        });\n        res.cookie(`nToken`, token, { maxAge: 900000, httpOnly: true });\n        res.redirect(`/`);\n    })\n})\n\nauth.get('/profile', async (req, res) => {\n    const query = {\n        _id: req.user._id\n    }\n    const user = await User.findOne(query).catch(err => {\n        console.log(err);\n        return res.status(500).send(err);\n    })\n    res.render('profile', { user: user });\n})\n\nexport default auth;\n"],"file":"auth.js"}